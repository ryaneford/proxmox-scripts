#!/usr/bin/env bash

# ------------------------------------------------------------------------------
# Title:         Dockge LXC Installer
# Description:   Creates a Ubuntu 22.04 LXC with Docker, Dockge and Tailscale support
# Author:        Ryan F.
# License:       MIT
# GitHub:        https://github.com/ryaneford
# ------------------------------------------------------------------------------

set -e

# --- DEFAULT CONFIG (Touchless Mode) ---
CTID=$(pvesh get /nodes/$(hostname)/lxc | awk '{print $1}' | grep -E '^[0-9]+$' | sort -n | tail -1 | awk '{print $1+1}')
HOSTNAME="dockge"
PASSWORD=$(tr -dc A-Za-z0-9_@%+! | head -c 16 < /dev/urandom)
DISK_SIZE="10G"
CORE_COUNT="2"
RAM_SIZE="2048"
BRIDGE="vmbr1"
IP="dhcp"
STORAGE="local-btrfs"

echo "üß∞ Dockge LXC Installer for Proxmox VE"

# --- ADVANCED SETUP PROMPT ---
read -p "üõ†Ô∏è Use advanced setup? (y/n): " ADVANCED
if [[ "$ADVANCED" =~ ^[Yy]$ ]]; then
  read -p "Enter CT ID [$CTID]: " CTID_IN
  CTID=${CTID_IN:-$CTID}
  read -p "Enter hostname [$HOSTNAME]: " HOSTNAME_IN
  HOSTNAME=${HOSTNAME_IN:-$HOSTNAME}
  read -p "Enter password [autogenerated]: " PASSWORD_IN
  PASSWORD=${PASSWORD_IN:-$PASSWORD}
  read -p "Disk size (e.g., 10G) [$DISK_SIZE]: " DISK_IN
  DISK_SIZE=${DISK_IN:-$DISK_SIZE}
  read -p "CPU cores [$CORE_COUNT]: " CORE_IN
  CORE_COUNT=${CORE_IN:-$CORE_COUNT}
  read -p "RAM in MB [$RAM_SIZE]: " RAM_IN
  RAM_SIZE=${RAM_IN:-$RAM_SIZE}
  read -p "Bridge [$BRIDGE]: " BRIDGE_IN
  BRIDGE=${BRIDGE_IN:-$BRIDGE}
  read -p "IP (e.g., dhcp or 192.168.1.100/24) [$IP]: " IP_IN
  IP=${IP_IN:-$IP}
  read -p "Storage pool [$STORAGE]: " STORAGE_IN
  STORAGE=${STORAGE_IN:-$STORAGE}
fi

# --- CHECK TEMPLATE ---
TEMPLATE=$(pveam available | grep -o "ubuntu-22.04-standard_.*.tar.zst" | tail -1)
if [[ -z "$TEMPLATE" ]]; then
  echo "‚ùå Ubuntu 22.04 template not found. Run:"
  echo "   pveam update && pveam download local ubuntu-22.04-standard"
  exit 1
fi

# --- CREATE LXC ---
echo "üöÄ Creating LXC container $CTID..."
pct create $CTID local:vztmpl/$TEMPLATE \
  -hostname $HOSTNAME \
  -password $PASSWORD \
  -storage $STORAGE \
  -rootfs $STORAGE:$DISK_SIZE \
  -memory $RAM_SIZE \
  -cores $CORE_COUNT \
  -net0 name=eth0,bridge=$BRIDGE,ip=$IP \
  -features nesting=1 \
  -unprivileged 1 \
  -start 1

# --- TAILSCALE DEVICE SUPPORT ---
echo "üîê Enabling Tailscale support..."
echo "lxc.cgroup2.devices.allow: c 10:200 rwm" >> /etc/pve/lxc/$CTID.conf
echo "lxc.mount.entry: /dev/net dev/net none bind,create=dir" >> /etc/pve/lxc/$CTID.conf

# --- INSTALL DOCKER + DOCKGE ---
echo "üê≥ Installing Docker and Dockge in container $CTID..."
pct exec $CTID -- bash -c "
  apt update && apt upgrade -y && apt install curl sudo -y
  useradd -m -s /bin/bash admin
  echo 'admin:$PASSWORD' | chpasswd
  usermod -aG sudo admin

  su - admin <<'EOF'
    curl -fsSL https://get.docker.com -o get-docker.sh
    sh get-docker.sh
    sudo usermod -aG docker admin
    newgrp docker

    sudo mkdir -p /opt/stacks /opt/dockge
    cd /opt/dockge
    curl 'https://dockge.kuma.pet/compose.yaml?port=5001&stacksPath=%2Fopt%2Fstacks' --output compose.yaml
    docker compose up -d
EOF
"

# --- FINAL OUTPUT ---
echo -e "\n‚úÖ LXC container $CTID successfully created!"
echo "üîê Login User: admin"
echo "üßæ Password: $PASSWORD"
echo "üåê Access Dockge at: http://<container-ip>:5001"
echo "üìü Connect via: pct console $CTID"
